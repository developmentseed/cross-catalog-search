name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: "1.8.0"

      - name: Set up Python
        uses: actions/setup-python@v5
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
        with:
          python-version: "3.12"
          cache: poetry
          cache-dependency-path: src/server/poetry.lock

      - name: Install dependencies including dev dependencies
        working-directory: src/server
        run: poetry install --with dev

      - name: Run Tests
        working-directory: src/server
        run: poetry run pytest

  publish:
    needs: [test]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: "1.8.0"

      - name: Set up Python
        uses: actions/setup-python@v5
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: "true"
        with:
          python-version: "3.12"
          cache: poetry
          cache-dependency-path: src/server/poetry.lock

      - name: Set tag version
        id: tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set module version
        working-directory: src/server
        id: module
        run: echo "version=$(poetry version -s)" >> $GITHUB_ENV

      - name: Build and publish package to pypi
        if: env.tag == env.version
        working-directory: src/server
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --build 
